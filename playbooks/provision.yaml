- hosts: all
  tasks:
    - name: update apt cache
      apt:
        update_cache=yes

    - name: install apt packages
      apt:
        pkg={{ item }}
      with_items:
        - git
        - nginx
        - python-dev
        - python-setuptools
        - python-virtualenv
        - redis-server
        - supervisor

    - name: install pip
      easy_install:
        name=pip

    - name: create home dir for gatewatch user with ssh key
      user:
        name=gatewatch
        createhome=yes

- hosts: all
  sudo: True
  sudo_user: gatewatch
  tasks:
    - name: create directories
      file:
        dest={{ item }}
        state=directory
        mode=0700
      with_items:
        - ~/log
        - ~/.ssh

    - name: deploy ssh known hosts
      copy:
        src=files/known_hosts
        dest=/home/gatewatch/.ssh/known_hosts
        owner=gatewatch
        group=gatewatch
        mode=0644

    - name: install pip packages into venv
      sudo_user: gatewatch
      pip:
        name={{ item }} state=latest
        virtualenv=/home/gatewatch/venv
      with_items:
        - pip
        - celery
        - gunicorn

- hosts: all
  tasks:
    - name: deploy app config
      template:
        src=templates/config.py
        dest=/etc/gatewatch.conf.py
        owner=gatewatch
        group=gatewatch
        mode=0700

    - name: deploy celery config
      template:
        src=templates/supervisor.celery.conf
        dest=/etc/supervisor/conf.d/celery.conf

    - name: deploy gunicorn config
      template:
        src=templates/supervisor.gunicorn.conf
        dest=/etc/supervisor/conf.d/gunicorn.conf

    - name: deploy nginx config
      template:
        src=templates/nginx.vhost
        dest=/etc/nginx/sites-enabled/default
      notify: restart nginx

    - name: ensure supervised processes are present
      shell: /usr/bin/supervisorctl reread && /usr/bin/supervisorctl update

    - name: ensure nginx is running
      service:
        name=nginx
        enabled=yes
        state=started

  handlers:
    - name: restart nginx
      service:
        name=nginx
        state=reloaded

- include: deploy.yaml
